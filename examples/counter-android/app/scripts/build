#!/bin/bash

set -e
set -o pipefail

fail() {
  echo >&2 "$@"
  exit 1
}

HOST="$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)"
SCRIPT_DIR="$(cd "$(dirname "$0")" >/dev/null 2>&1 && pwd)"
pushd "$SCRIPT_DIR" >/dev/null

[[ -n "$ANDROID_NDK" ]] || fail "ANDROID_NDK is not specified"
export PATH="$PATH:$ANDROID_NDK/toolchains/llvm/prebuilt/$HOST/bin"

build_target() {
  TARGET="$1"
  if [[ "$TARGET" == "x86_64-linux-android" ]]; then
    export CC_x86_64_linux_android=x86_64-linux-android26-clang
    export CXX_x86_64_linux_android=x86_64-linux-android26-clang++
    export CARGO_TARGET_X86_64_LINUX_ANDROID_LINKER=x86_64-linux-android26-clang
    OUTPUT_DIR="$SCRIPT_DIR/../src/main/jniLibs/x86_64"
  elif [[ "$TARGET" == "aarch64-linux-android" ]]; then
    export CC_aarch64_linux_android=aarch64-linux-android26-clang
    export CXX_aarch64_linux_android=aarch64-linux-android26-clang++
    export CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=aarch64-linux-android26-clang
    OUTPUT_DIR="$SCRIPT_DIR/../src/main/jniLibs/arm64-v8a"
  else
    fail "Unsupported build target: $TARGET"
  fi
  cargo build \
    --release \
    --manifest-path "$SCRIPT_DIR/../../../counter/Cargo.toml" \
    --lib \
    --target "$TARGET" \
    -Z unstable-options \
    --out-dir "$OUTPUT_DIR/"
  rm -f "$OUTPUT_DIR/libterramach.so"
  mv "$OUTPUT_DIR/libcounter.so" "$OUTPUT_DIR/libterramach.so"
}

build_target x86_64-linux-android
build_target aarch64-linux-android
